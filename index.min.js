const path=require("path"),fs=require("fs/promises"),template=require("lodash/template"),{validate:validate}=require("schema-utils"),svgTemplate=require("./lib/svgTemplate"),imgTemplate=require("./lib/imgTemplate"),{getSvgelemenData:getSvgelemenData,encodeSvg:encodeSvg}=require("./lib/helpers"),loaderValidateSchema={title:"Svg Loader options",properties:{applyCurrentColor:{description:"It finds all fill attributes and replace value on currentColor. It will be as fill='currentColor'. If transformIntoDataURI is true, it will not clear color.",type:"boolean"},transformIntoDataURI:{description:"The svg file will be transformed in to data uri",type:"boolean"}},additionalProperties:!1},lightSvgLoader=async function(e){const t=this.getOptions();validate(loaderValidateSchema,t);const a=path.basename(this.resourcePath),i=await fs.readFile(`${this.resourcePath}`),r={sourceFilename:a};this.emitFile(a,e,null,r);const{innerItems:l,width:o,height:s,viewBox:n}=getSvgelemenData(i,t);return t?.transformIntoDataURI?template(imgTemplate)({imgSrc:encodeSvg(i)}):template(svgTemplate)({innerItems:l,width:o,height:s,viewBox:n})};module.exports=lightSvgLoader,module.exports.raw=!0;
